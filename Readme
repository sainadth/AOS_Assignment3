# Implementation of comparision between FIFO and LRU in C++
Comparison between LRU and FIFO, ofcourse LRU is the efficient

# Used unordered_set and queue to Implement FIFO effectively
- Just a queue following FIFO rule
- no mechanism to handle recent usage of a page
- lead to more no of page faults incase of reaccessed pages

# Used unordered_map and list (double linked list) to Implement LRU effectively
- uses a double linked list foe efficient removal and unordered_map for fast lookup
- recently used pages are most likely stays in memory
- fewer page faults if pages are reaccessed 

## MY TIME EATER

MISSED TO PUSH THE RECENTLY TO THE HEAD (DEBUGGED 2HRS my bad) line 75

# How to execute
```bash
g++ pageFault.cpp -o pageFault;  .\pageFault.exe
```


# Full OOPS implementation comming soon.... (stay tuned)



## License
This project is licensed under the GPL License - see the [LICENSE](LICENSE) file for details.

---
Feel free to contribute or raise issues for further clarification!